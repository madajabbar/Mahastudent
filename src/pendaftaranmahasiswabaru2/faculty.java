/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pendaftaranmahasiswabaru2;

import diu.swe.habib.JPanelSlider.JPanelSlider;

/**
 *
 * @author Mada
 */
public class faculty extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    
    public faculty() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        kButton1 = new keeptoo.KButton();
        kButton2 = new keeptoo.KButton();
        kButton3 = new keeptoo.KButton();
        kButton4 = new keeptoo.KButton();
        kButton5 = new keeptoo.KButton();
        kButton6 = new keeptoo.KButton();
        jPanel2 = new javax.swing.JPanel();
        jPanelSlider1 = new diu.swe.habib.JPanelSlider.JPanelSlider();
        PANELHISTORY = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        PANELPOTION = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        PANELDIVINATION = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        PANELCHARM = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        PANELDEFENCE = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        PANELARITHMANCY = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(197, 168, 112));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/logo universitas (kecil).png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        kButton1.setText("HISTORY OF MAGIC");
        kButton1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        kButton1.setkEndColor(new java.awt.Color(119, 103, 0));
        kButton1.setkHoverEndColor(new java.awt.Color(247, 240, 215));
        kButton1.setkHoverStartColor(new java.awt.Color(247, 240, 215));
        kButton1.setkStartColor(new java.awt.Color(119, 103, 44));
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(kButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 130, -1));

        kButton2.setText("POTION");
        kButton2.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        kButton2.setkEndColor(new java.awt.Color(119, 103, 0));
        kButton2.setkHoverEndColor(new java.awt.Color(247, 240, 215));
        kButton2.setkHoverStartColor(new java.awt.Color(247, 240, 215));
        kButton2.setkStartColor(new java.awt.Color(119, 103, 44));
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(kButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 130, -1));

        kButton3.setText("DIVINATION");
        kButton3.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        kButton3.setkEndColor(new java.awt.Color(119, 103, 0));
        kButton3.setkHoverEndColor(new java.awt.Color(247, 240, 215));
        kButton3.setkHoverStartColor(new java.awt.Color(247, 240, 215));
        kButton3.setkStartColor(new java.awt.Color(119, 103, 44));
        kButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(kButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 130, -1));

        kButton4.setText("CHARM");
        kButton4.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        kButton4.setkEndColor(new java.awt.Color(119, 103, 0));
        kButton4.setkHoverEndColor(new java.awt.Color(247, 240, 215));
        kButton4.setkHoverStartColor(new java.awt.Color(247, 240, 215));
        kButton4.setkStartColor(new java.awt.Color(119, 103, 44));
        kButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(kButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 130, -1));

        kButton5.setText("DEFENCE DARK ARTS");
        kButton5.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        kButton5.setkEndColor(new java.awt.Color(119, 103, 0));
        kButton5.setkHoverEndColor(new java.awt.Color(247, 240, 215));
        kButton5.setkHoverStartColor(new java.awt.Color(247, 240, 215));
        kButton5.setkStartColor(new java.awt.Color(119, 103, 44));
        kButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(kButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 130, 50));

        kButton6.setText("ARITHMANCY");
        kButton6.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        kButton6.setkEndColor(new java.awt.Color(119, 103, 0));
        kButton6.setkHoverEndColor(new java.awt.Color(247, 240, 215));
        kButton6.setkHoverStartColor(new java.awt.Color(247, 240, 215));
        kButton6.setkStartColor(new java.awt.Color(119, 103, 44));
        kButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(kButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 130, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 440));

        jPanel2.setBackground(new java.awt.Color(247, 240, 215));
        jPanel2.setLayout(new java.awt.CardLayout());

        PANELHISTORY.setBackground(new java.awt.Color(125, 9, 9));
        PANELHISTORY.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Harry P", 0, 16)); // NOI18N
        jLabel7.setText("HISTORY OF MAGIC");
        PANELHISTORY.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(null);
        jTextPane1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextPane1.setText("History of Magic is a branch of subjects that studies about all the history of the magical world that takes place. \nWhether it's a place, event, character or something like that. \nIn this class, you are taught about the history of magic itself. \nNot only that, you can also take a walk if there is material about the history of the place.\nHistory of Magic is a science oriented to the past that impacts the future. \nIt can be about characters, events, or historical places.\nThe goal is to find out the development of magic, remembering and making a role model, \nmaking it as a reference for the future, and others");
        jTextPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTextPane1);

        PANELHISTORY.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 370, 230));

        jPanelSlider1.add(PANELHISTORY, "card2");

        PANELPOTION.setBackground(new java.awt.Color(254, 196, 1));
        PANELPOTION.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Harry P", 0, 16)); // NOI18N
        jLabel9.setText("POTION");
        PANELPOTION.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jTextPane2.setEditable(false);
        jTextPane2.setBorder(null);
        jTextPane2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextPane2.setText("Potion is the art of making potions to create a magical impression.\nIn this class, you will learn a lot about Potions and how to make them.\nEach ingredient is made with a fairly complex process and requires patience and accuracy. Almost the same as other subjects.\nIf in the world of muggles, potions are often equated with a lesson called Chemistry.\nThe potions themselves consist of a mixture of magical ingredients which are then made in a cauldron.\nProduces a certain effect.\nHowever, magic here is not merely something magical. The effects are just extraordinary.");
        jScrollPane2.setViewportView(jTextPane2);

        PANELPOTION.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 400, 210));

        jPanelSlider1.add(PANELPOTION, "card3");

        PANELDIVINATION.setBackground(new java.awt.Color(37, 88, 31));
        PANELDIVINATION.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Harry P", 0, 16)); // NOI18N
        jLabel10.setText("DIVINATION");
        PANELDIVINATION.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jTextPane3.setEditable(false);
        jTextPane3.setBorder(null);
        jTextPane3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextPane3.setText("Divination is a technique for predicting, interpreting, looking at, and seeing one's fate.\nBoth from the past and the future.\nAnd the methods and media used are also different.\nThere is a little footnote for you to remember, that is, don't accept raw Divination results because the results are not always accurate.\nOne of the simplest branches of Divination is Alomancy, which your older sister studied last month.\nAlomancy is a branch of divination that uses salt as its medium.\nDivination has many branches of science.\nIf you are interested, can ask me a question or can go to the library to read various sources.");
        jScrollPane3.setViewportView(jTextPane3);

        PANELDIVINATION.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 390, 230));

        jPanelSlider1.add(PANELDIVINATION, "card4");

        PANELCHARM.setBackground(new java.awt.Color(10, 255, 239));
        PANELCHARM.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Harry P", 0, 16)); // NOI18N
        jLabel11.setText("CHARM");
        PANELCHARM.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jTextPane4.setEditable(false);
        jTextPane4.setBorder(null);
        jTextPane4.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jTextPane4.setText("Charm is a subject which discusses spells that are often used by magicians.\nIn this class, you are taught how to recite, practice, even know the mantra in detail.\nBasic of Charm\nCharm is a spell that adds an effect or changes the nature of an object.\nAs one example of spells that add effects is the Levitation Charm, which is useful for flying objects that were originally inanimate objects.\nFor charms that change the nature or character of the target, one example is Softening Charm which can change hard surfaces to soft. However, this mantra is not part of transfiguration nor is it different from transfiguration.\nThe difference is quite obvious and easy to know. Because if Charm only changes the nature of the object, the Transfiguration changes the whole object to the molecule.\nNot in vain in chanting charm, of course. There are factors that need to be known to be able to recite a spell. These factors include\n1. Strong concentration.\n2. The right wand movement.\n3. Clear and accurate pronunciation.\n4. Exercise is a supporting factor.\nOf course these factors cannot be underestimated. Because if there are mistakes the spell effect can instead turn to the user and become a boomerang that is detrimental to the user.");
        jScrollPane4.setViewportView(jTextPane4);

        PANELCHARM.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 390, -1));

        jPanelSlider1.add(PANELCHARM, "card5");

        PANELDEFENCE.setBackground(new java.awt.Color(158, 153, 151));
        PANELDEFENCE.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Harry P", 0, 16)); // NOI18N
        jLabel12.setText("DEFENCE AGAINST THE DARK ARTS ");
        PANELDEFENCE.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jTextPane5.setEditable(false);
        jTextPane5.setBorder(null);
        jTextPane5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextPane5.setText("Defense Against the Dark Arts is one of the subjects in the wizarding world that teaches students not to violate the rules that exist in the wizarding world and can protect themselves.\nDefense Against the Dark Arts, means that these subjects teach you how to protect yourself from black magic. Not only protect ourselves, we will also learn how to fight, avoid, and also use black magic. However, the purpose of using here is not to use in a negative sense. However, we use black magic to protect ourselves.\n\nDespite being labeled dark, black magic is not always evil. Because Dark Arts itself will be dangerous if misused. Black magic itself refers to all types of magic that are usually used to cause damage to even kill victims. Black magic also not only harms the target or victim, but also harms its users.\n\nAn example is Tom Riddle. He lost his good looks and physique, especially on his face that turned similar to a snake because of the practice of black magic.");
        jScrollPane5.setViewportView(jTextPane5);

        PANELDEFENCE.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 340, -1));

        jPanelSlider1.add(PANELDEFENCE, "card6");

        PANELARITHMANCY.setBackground(new java.awt.Color(168, 91, 91));
        PANELARITHMANCY.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Harry P", 0, 16)); // NOI18N
        jLabel13.setText("ARITHMANCY");
        PANELARITHMANCY.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jTextPane6.setEditable(false);
        jTextPane6.setBorder(null);
        jTextPane6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextPane6.setText("Arithmancy is a branch of magic that actually uses the brain more than magic (Muggles have lessons similar to this. They call it Mathematics). In this class, students learn to count using the Arithmancy system and methods. Arithmancy is the science of forecasting using numbers. Arithmancy is divided into two words, arithmó meaning number, and manteía means prediction. Arithmancy like Divination is the difference because Arithmancy places more emphasis on Numbers. Studying Arithmancy is expected to help witches gain extensive insights about the world around us and become more understanding about the universe.\nThe Main Arithmancy System is divided into three namely Phytagorean, Kabbalah / Hebrew-Kabbalah, and Chaldean / Chaldea.\nArithmancy was formerly known as the Science of Calculations. Magicians from Europe, Britain, France and America used to use it. A few centuries later it turned into Arithmancy.\n\nBridget Wenlock was the discoverer of the magical properties of the number seven in the 1200s.\nThe first system is the Phytagorean System. This system has two originators. The first is that Pythagoras lived in the 6th century BC and was famous as a philosopher and mathematician.\nThe second Cornelius Agrippa was an arithmancy expert and perfected Pythagoras' findings. One method of calculation using the name Cornelius is Agrippa table. They are Pythagoras and Cornelius Agrippa.");
        jScrollPane6.setViewportView(jTextPane6);

        PANELARITHMANCY.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 400, -1));

        jPanelSlider1.add(PANELARITHMANCY, "card7");

        jPanel2.add(jPanelSlider1, "card2");

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 60, -1, 380));

        jPanel3.setBackground(new java.awt.Color(119, 103, 44));
        jPanel3.setLayout(new java.awt.CardLayout());
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 0, 440, 70));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        // TODO add your handling code here:
        jPanelSlider1.nextPanel(20,PANELHISTORY,JPanelSlider.left);
        
    }//GEN-LAST:event_kButton1ActionPerformed

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed
        // TODO add your handling code here:
        jPanelSlider1.nextPanel(20,PANELPOTION,JPanelSlider.left);
    }//GEN-LAST:event_kButton2ActionPerformed

    private void kButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton3ActionPerformed
        // TODO add your handling code here:'
        jPanelSlider1.nextPanel(20,PANELDIVINATION,JPanelSlider.left);
    }//GEN-LAST:event_kButton3ActionPerformed

    private void kButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton4ActionPerformed
        // TODO add your handling code here
        jPanelSlider1.nextPanel(20,PANELCHARM,JPanelSlider.right);
    }//GEN-LAST:event_kButton4ActionPerformed

    private void kButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton5ActionPerformed
        // TODO add your handling code here:
        jPanelSlider1.nextPanel(20,PANELDEFENCE,JPanelSlider.right);
    }//GEN-LAST:event_kButton5ActionPerformed

    private void kButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton6ActionPerformed
        // TODO add your handling code here:
        jPanelSlider1.nextPanel(20,PANELARITHMANCY,JPanelSlider.right);
    }//GEN-LAST:event_kButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(faculty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(faculty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(faculty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(faculty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new faculty().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PANELARITHMANCY;
    private javax.swing.JPanel PANELCHARM;
    private javax.swing.JPanel PANELDEFENCE;
    private javax.swing.JPanel PANELDIVINATION;
    private javax.swing.JPanel PANELHISTORY;
    private javax.swing.JPanel PANELPOTION;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private diu.swe.habib.JPanelSlider.JPanelSlider jPanelSlider1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private keeptoo.KButton kButton1;
    private keeptoo.KButton kButton2;
    private keeptoo.KButton kButton3;
    private keeptoo.KButton kButton4;
    private keeptoo.KButton kButton5;
    private keeptoo.KButton kButton6;
    // End of variables declaration//GEN-END:variables
}
